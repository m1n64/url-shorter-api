events
{
	worker_connections 1024;
}

http
{
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	server
	{
		listen 80;
		server_name shortlink.com;

		return 301 https://$host$request_uri;
	}

	server
	{
		listen 443 ssl;
		server_name shortlink.com;

		ssl_certificate /etc/nginx/ssl/server.crt;
		ssl_certificate_key /etc/nginx/ssl/server.key;

		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_prefer_server_ciphers on;

		access_log /var/log/nginx/access.log;
		error_log /var/log/nginx/error.log;

# 		location / {
#             content_by_lua_block {
#                 local memcached = require "resty.memcached"
#                 local memc = memcached:new()
#                 memc:set_timeout(1000)  -- 1 секунда таймаута
#                 local ok, err = memc:connect("memcached", 11211)
#                 if not ok then
#                     ngx.say("Ошибка подключения: ", err)
#                     return
#                 end
#                 local res, flags, err = memc:get(ngx.var.request_uri)
#                 if not res then
#                     ngx.say("Нет данных в кэше")
#                 else
#                     ngx.say(res)
#                 end
#             }
#         }

# 		location / {
#             set $memcached_key $request_uri;
#             memcached_pass tu-memcached:11211;
#             error_page 404 = @fetch_from_backend;
#
#             set $user_ip $remote_addr;
#             set $referer $http_referer;
#             set $user_agent $http_user_agent;
#
#             proxy_pass_request_body off;
#             proxy_set_header Content-Length 0;
#             proxy_set_header User-IP $user_ip;
#             proxy_set_header Referer $referer;
#             proxy_set_header User-Agent $user_agent;
#             proxy_pass http://backend_service/track;
#         }

		location /
		{
			proxy_pass http://cvgatway-backend:8000;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";

			proxy_buffering off;
			chunked_transfer_encoding on;

			proxy_read_timeout 3600s;
			proxy_send_timeout 3600s;

			add_header Access-Control-Allow-Origin "$http_origin" always;
			add_header Access-Control-Allow-Credentials "true" always;
			add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
			add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;

			if ($request_method = OPTIONS)
			{
				return 204;
			}
		}
	}
}
